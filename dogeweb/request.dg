import '/cgi'

import 'route'
import 'response'


#: Parse an `Accept`-like header and return a dictionary that assigns
#: weights to MIME types. Unspecified types have a weight of 0.
#: Preferred types have a weight of 1.
#:
#: parse_accept :: data -> dict str float
#:
parse_accept = data -> raise NotImplementedError


#: Parse a `Content-Type`-like header and return its `encoding` value.
#:
#: parse_encoding :: str -> str
#:
parse_encoding = data ->
  xs = snd $ cgi.parse_header data
  xs.get 'encoding' 'utf-8'


Request = subclass route.ContextAware response.ContextAware where
  __init__ = raw payload handler ~>
    @method      = raw.method
    @path        = raw.path
    @version     = raw.version
    @headers     = raw.headers
    @compression = raw.compression
    @shouldclose = raw.should_close
    @payload     = payload
    @handler     = handler
    (super Request self).__init__!

  accept   = ~> raise NotImplementedError
  encoding = ~> raise NotImplementedError
  form     = ~> raise NotImplementedError
  files    = ~> raise NotImplementedError
  cookies  = ~> raise NotImplementedError
