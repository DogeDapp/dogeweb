:description: the asyncio protocol


:class: Server handler (Optional onerror) (Optional timeout)
  A complete application. `handler` is a function that accepts [request.Request]((local))s
  and returns something that can be converted into a [response.Response]((local)).
  `onerror` is a function that accepts a [request.Response]((local)) and a
  [request.Abort]((local)), but is otherwise similar to a handler.
  `timeout` is how long to wait for request, in seconds. The timer starts at the
  beginning of the connection or after sending a response over a `keep-alive`
  connection, and ends just before handling the request.


:method: __call__ loop
  Construct a callback for [asyncio.streams.StreamReaderProtocol]((stdlib,unqualified))
  that would read requests, call handlers, and write responses when used.


:method: run (...)
  Start a development server. The arguments are the same as for
  [util.start_server]((local)), except that `callback` is already provided.
  This method does not return unless you manually stop the event loop.
